//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use {
    sea_orm::entity::prelude::*,
    serde::{Deserialize, Serialize},
};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "permission_enum")]
pub enum PermissionEnum {
    #[sea_orm(string_value = "View")]
    View,
    #[sea_orm(string_value = "Comment")]
    Comment,
    #[sea_orm(string_value = "Edit")]
    Edit,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "question_type_enum")]
pub enum QuestionTypeEnum {
    #[sea_orm(string_value = "MultipleChoice")]
    MultipleChoice,
    #[sea_orm(string_value = "CheckBoxes")]
    CheckBoxes,
    #[sea_orm(string_value = "TextFill")]
    TextFill,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "role_enum")]
pub enum RoleEnum {
    #[sea_orm(string_value = "Staff")]
    Staff,
    #[sea_orm(string_value = "User")]
    User,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "status_enum")]
pub enum StatusEnum {
    #[sea_orm(string_value = "NotStart")]
    NotStart,
    #[sea_orm(string_value = "InProgess")]
    InProgess,
    #[sea_orm(string_value = "Submitted")]
    Submitted,
    #[sea_orm(string_value = "Abandoned")]
    Abandoned,
}
