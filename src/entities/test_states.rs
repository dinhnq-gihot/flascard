//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use {
    sea_orm::entity::prelude::*,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "test_states")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub test_id: Uuid,
    pub current_quiz_question: Uuid,
    pub remaining_time: i32,
    pub completed_questions: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tests::Entity",
        from = "Column::CurrentQuizQuestion",
        to = "super::tests::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Tests2,
    #[sea_orm(
        belongs_to = "super::tests::Entity",
        from = "Column::TestId",
        to = "super::tests::Column::Id",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Tests1,
}

impl ActiveModelBehavior for ActiveModel {}
